{
  "swagger": "2.0",
  "info": {
    "title": "Author's Haven",
    "description": "Authors Haven - A Social platform for the creative at heart.",
    "version": "1.0"
  },
  "host": "persephone-backend-staging.herokuapp.com",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "Users API end point"
    },
    {
      "name": "Auth",
      "description": "SignUp and Signin users"
    },
    {
      "name": "Articles",
      "description": "All endpoint about articles"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "POST API endpoint for user login",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid username/password supplied"
          },
          "409": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "POST API endpoint for signing up new user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "firstName",
            "in": "formData",
            "description": "user first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "formData",
            "description": "user last name",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "users password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "email exist"
          },
          "409": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/users/logout": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Log current token out",
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Email has been sent to reset password"
          },
          "400": {
            "description": "User email does not exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/forgot_password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Post user email for password reset instructions",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "formData",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Email has been sent to reset password"
          },
          "400": {
            "description": "User email does not exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Post user email for password reset instructions",
        "parameters": [
          {
            "name": "password_reset",
            "in": "query",
            "description": "token sent to user email address",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Error in input"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Api endpoint to get all users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "page number to display"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Number of items on a page"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Error in operation"
          },
          "404": {
            "description": "Users not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/create_users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "POST API endpoint for Super Admin to create other admins",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "firstName",
            "in": "formData",
            "description": "user first name",
            "required": true,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "formData",
            "description": "user last name",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "users password",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "email exist"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/update/{userId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "POST API endpoint for Super Admin to update user information",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The email of the user",
            "required": true,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "email of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "No user found"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/{userId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "POST API endpoint for Admin to delete user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id of the user to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/follows": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "POST API endpoint for user to follow another user and unfollow another user",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "description": "The userId of who to be followed",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "User not found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/users/follows/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "POST API endpoint to view a user followers",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "user Id of the user to view their followers",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "User not found"
          },
          "409": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/articles": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "POST API endpoint for creating articles",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "description": "title of the article",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "description of the article",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "formData",
            "description": "body of the article",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "images",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "email exist"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/draft": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "GET API endpoint for getting a personal drafted articles",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/publish/{userId}/": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "GET API endpoint for getting a personal published articles",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "page number to display"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Number of items on a page"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "getting a user published articles with userId",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/publish/{slug}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "GET API endpoint for getting a personal published articles",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "page number to display"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Number of items on a page"
          },
          {
            "name": "slug",
            "in": "path",
            "description": "getting a personal published articles with slug",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Articles"
        ],
        "summary": "PUT API endpoint for publishing an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to publish",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/unpublish/{slug}": {
      "put": {
        "tags": [
          "Articles"
        ],
        "summary": "PUT API endpoint for unpublishing an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to unpublish",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "GET API endpoint for viewing a particular article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to view",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "Articles"
        ],
        "summary": "PUT API endpoint for updating a particular article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to update",
            "required": true,
            "type": "integer"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "title of the article to update",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "desription of the article to update",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "formData",
            "description": "body of the article to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "body of the article to update",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "DELETE API endpoint for deleting a particular article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to delete",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "no articles found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/comments": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "POST API endpoint for creating comment on an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to be commented on",
            "required": true,
            "type": "integer"
          },
          {
            "name": "body",
            "in": "formData",
            "description": "body of the comment",
            "required": true,
            "type": "string"
          },
          {
            "name": "highlightedText",
            "in": "formData",
            "description": "highlightedText",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "No user found"
          },
          "401": {
            "description": "Not authorized"
          },
          "403": {
            "description": "Auth token not supplied"
          },
          "500": {
            "description": "Auth token expired"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "GET API endpoint for getting all comment on an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article to view all comments",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "article not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/comments/{id}": {
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "DELETE API endpoint for deleting a comment on an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article",
            "required": true,
            "type": "integer"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id of the comment to be deleted",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "article not found"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "API endpoint to view specific comment record",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Article slug",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "comment ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Comment does not exist"
          }
        }
      }
    },
    "/articles/ratings": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Post endpoint to rate an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "formData",
            "description": "user Id of the user to view their followers",
            "required": true,
            "type": "integer"
          },
          {
            "name": "rating",
            "in": "formData",
            "description": "Rating for the article between 1 - 5",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "User not found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/reports": {
      "post": {
        "tags": [
          "Articles"
        ],
        "summary": "Post endpoint to report an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article",
            "required": true,
            "type": "string"
          },
          {
            "name": "reason",
            "in": "formData",
            "description": "reason for reporting an article",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "User not found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/remove-article": {
      "delete": {
        "tags": [
          "Articles"
        ],
        "summary": "Post endpoint to remove an article",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "slug of the article",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "User not found"
          },
          "409": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/comments/{id}/history": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "API endpoint to view the edit history of a comment",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Article slug",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "comment ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Comment does not exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/comments/{id}/edit": {
      "patch": {
        "tags": [
          "Articles"
        ],
        "summary": "API endpoint to edit a comment",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Article slug",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "comment ID",
            "required": true,
            "type": "integer"
          },
          {
            "name": "comment",
            "in": "formData",
            "description": "new comment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Comment updated successfully"
          },
          "400": {
            "description": "Comment cannot be empty"
          },
          "403": {
            "description": "You don't have permission to edit this comment"
          },
          "404": {
            "description": "Comment does not exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/articles/{slug}/comments/{id}/reactions": {
      "get": {
        "tags": [
          "Articles"
        ],
        "summary": "API endpoint to like and unlike a comment on an article",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "description": "Article slug",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "comment ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "Comment does not exist"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/profiles/{userName}": {
      "get": {
        "tags": [
          "Profiles"
        ],
        "summary": "API endpoint to view user profile",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "username of the user to be viewed",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "404": {
            "description": "User does not exist"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}